<?xml version="1.0" encoding="UTF-8"?>
<ehcache updateCheck="false" name="defaultCache">
	<cacheManagerPeerProviderFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory" properties="peerDiscovery=manual, socketTimeoutMillis=2000, rmiUrls=//10.100.121.8:40005/sysCache|//10.100.121.8:40005/tenderCache" />
	<cacheManagerPeerListenerFactory class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory" properties="hostName=10.100.121.8, port=40001, socketTimeoutMillis=2000" />
	<!-- <cacheManagerPeerProviderFactory -->
	<!-- class="net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory" -->
	<!-- properties="peerDiscovery=automatic,multicastGroupAddress=230.0.0.1,multicastGroupPort=4446,timeToLive=0" /> -->
	<!-- <cacheManagerPeerListenerFactory -->
	<!-- class="net.sf.ehcache.distribution.RMICacheManagerPeerListenerFactory" /> -->
	<diskStore path="java.io.tmpdir/p2ponline/ehcache/default" />
	<!-- DefaultCache setting. -->
	<defaultCache maxEntriesLocalHeap="100" eternal="false" timeToIdleSeconds="300" timeToLiveSeconds="600" overflowToDisk="true" maxEntriesLocalDisk="100000">
		<cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" properties="replicatePuts=false,replicateUpdatesViaCopy=false" />
	</defaultCache>
	<!-- Special objects setting. -->
	<!-- <cache name="sysCache" maxElementsInMemory="1000" eternal="true" -->
	<!-- overflowToDisk="true"> -->
	<!-- <cacheEventListenerFactory -->
	<!-- class="net.sf.ehcache.distribution.RMICacheReplicatorFactory" /> -->
	<!-- </cache> -->
	<cache name="sysCache" maxElementsInMemory="1000" eternal="true" overflowToDisk="true">
		<cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
			properties="replicateAsynchronously=true, replicatePuts=true,
  			replicatePutsViaCopy=true, replicateUpdates=true,  
  			replicateUpdatesViaCopy=true, replicateRemovals=true,asynchronousReplicationIntervalMillis=1000" />
		<bootstrapCacheLoaderFactory class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory" />
	</cache>
	<cache name="userCache" maxElementsInMemory="1000" eternal="true" overflowToDisk="true">
		<cacheEventListenerFactory class="net.sf.ehcache.distribution.RMICacheReplicatorFactory"
			properties="replicateAsynchronously=true, replicatePuts=true,
  			replicatePutsViaCopy=true, replicateUpdates=true,  
  			replicateUpdatesViaCopy=true, replicateRemovals=true,asynchronousReplicationIntervalMillis=100" />
		<bootstrapCacheLoaderFactory class="net.sf.ehcache.distribution.RMIBootstrapCacheLoaderFactory" />
	</cache>
	<!-- replicatePuts=true | false – 当一个新元素增加到缓存中的时候是否要复制到其他的peers. 默认是true。 -->
	<!-- replicateUpdates=true | false – 当一个已经在缓存中存在的元素被覆盖时是否要进行复制。默认是true。 -->
	<!-- replicateRemovals= true | false – 当元素移除的时候是否进行复制。默认是true。 -->
	<!-- replicateAsynchronously=true | false – 复制方式是异步的（指定为true时）还是同步的（指定为false时）。默认是true。 -->
	<!-- replicatePutsViaCopy=true | false – 当一个新增元素被拷贝到其他的cache中时是否进行复制指定为true时为复制，默认是true。 -->
	<!-- replicateUpdatesViaCopy=true | false – 当一个元素被拷贝到其他的cache中时是否进行复制（指定为true时为复制），默认是true。 -->
</ehcache>